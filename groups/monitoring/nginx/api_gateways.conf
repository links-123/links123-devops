log_format api_main '$remote_addr - $remote_user [$time_local] "$request"'
                    '$status $body_bytes_sent "$http_referer" "$http_user_agent"'
                    '"$http_x_forwarded_for" "$api_name"';

include api_backends.conf;

server {
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name _;
	return 307 https://$host$request_uri;
}

server {
    set $api_name -; # Start with an undefined API name, each API will update this value
    access_log /var/log/nginx/api_access.log api_main; # Each API may also log to a separate file

    listen 443 ssl;

    add_header Strict-Transport-Security "max-age=31536000" always;

    # TLS config
    ssl_certificate      tls/api.links.crt;
    ssl_certificate_key  tls/api.links.key;
    ssl_session_cache    shared:SSL:10m;
    ssl_session_timeout  5m;
    ssl_ciphers          HIGH:!aNULL:!MD5;
    ssl_protocols        TLSv1.1 TLSv1.2;

    # API definitions, one per file
    include api_conf.d/*.conf;

    # Error responses

    #error_page 404 = @400;         # Invalid paths are treated as bad requests
    #include api_json_errors.conf;  # API client friendly JSON error responses
    # proxy_intercept_errors on;     # Do not send backend errors to the client

    default_type application/json; # If no content-type then assume JSON
}
